

#=========================================================#
#=================== Server settings =====================#
#=========================================================#

server:
  port: 9090
  servlet:
    context-path: /
  tomcat:
    uri-encoding: UTF-8


#=========================================================#
#=================== Spring settings =====================#
#=========================================================#

spring:
  application:
    name: login-server   # 应用程序名称
  profiles:
    active: default   # 当前环境名称（注意：不可设置为 test 它是单元测试专用的名称）
  config:
    location:   # 外部文件位置
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  main:
    bannerMode: "off"

#================= datasource settings =================#

  datasource:
    druid:
      #MySQL
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://192.168.1.11:3306/style?allowMultiQueries=true&useUnicode=false&characterEncoding=UTF-8&useSSL=false
      username: root
      password: root
      #      #Oracle
      #      driver-class-name: oracle.jdbc.OracleDriver
      #      url: jdbc:oracle:thin:@localhost:1521:xe
      #      username: renren_security
      #      password: 123456
      #      #SQLServer
      #      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      #      url: jdbc:sqlserver://localhost:1433;DatabaseName=security_enterprise
      #      username: sa
      #      password: 123456
      #      #postgresql
      #      driver-class-name: org.postgresql.Driver
      #      url: jdbc:postgresql://localhost:5432/security_enterprise
      #      username: postgres
      #      password: 123456
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 6000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      #Oracle需要打开注释
      #validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

#================= Spring boot autoconfigure =================#

  autoconfigure:
        exclude:
          org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,
          org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,
          org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,

          org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,
          org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,
          org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,
          org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,

          org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,
          org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,
          org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,

          org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,
          org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,
          org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,

          org.springframework.boot.autoconfigure.reactor.core.ReactorCoreAutoConfiguration,
          org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,

          org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,
          org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,
          org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,
          org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,
          org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,

          com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration


#=========================================================#
#================= Mybatis Plus settings =================#
#=========================================================#

mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  mapper-scan-path: com.style.modules.*.dao
  typeAliasesPackage: com.style.modules.*.entity  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-super-type: com.style.mybatis.entity.BaseEntity
  global-config:
    sql-parser-cache: false
  configuration:
    executor-type: reuse
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true

dynamic:
  datasource:
    slave1:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://192.168.1.11:3306/slave1?allowMultiQueries=true&useUnicode=false&characterEncoding=UTF-8&useSSL=false
      username: root
      password: root
    slave2:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://192.168.1.11:3306/slave2?allowMultiQueries=true&useUnicode=false&characterEncoding=UTF-8&useSSL=false
      username: root
      password: root


#=========================================================#
#=================== Logging settings ====================#
#=========================================================#
logging:
  config: classpath:configs/log/logback-spring.xml

#eureka:
#  client:
#    register-with-eureka: true #是否将自己注册到eureka服务器中，单机情况无需注册。
#    fetch-registry: true #是否从eureka中获取注册信息。
#    service-url: #eureka客户端与服务端的交互地址。
#      defaultZone: http://localhost:8989/eureka/,http://localhost:9898/eureka/
#  instance:
#    hostname: localhost
#    #ip-address: 127.0.0.1
#    prefer-ip-address: true #是否将自己的IP地址注册到服务器中。
#    instance-id: ${spring.application.name}:${server.port} #自定义实例ID

